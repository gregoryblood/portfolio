{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gregory Blood\\\\Code\\\\portfolio\\\\src\\\\Components\\\\Navbar.js\";\nimport React, { useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from \"react-scroll\";\nconst Item = styled.div`\n    position: fixed;\n    width: 100%;\n    text-decoration: none;\n    display: block;\n    color: #00a3f5;\n    text-align: center;\n    font-size: 48px;\n    font-weight: bold;\n    text-decoration: none;\n    border-radius: 50%;\n    border-style: solid;\n    border-color: #00a3f5;\n    border-width: 4px;\n    height: 30px;\n    width: 30px;\n    padding: 10px;\n    margin: 10px;\n    line-height: 23%;\n    z-index: 10;\n    transition-duration: 0.4s;\n    -webkit-transition-duration: 0.4s;\n    @media(min-width: 769px) {\n        top: 15px;\n        right: 10px;\n        &:hover {\n            background-color: #00a3f5;\n            color: white;\n            cursor: pointer;\n        }\n    }\n    @media(max-width: 768px) {\n        bottom: 35px;\n        left: 7px;\n    }\n`;\nconst BottomShadow = styled.div`\n    position: fixed;\n    box-shadow: 0 -16px 16px 16px white;\n    width: 100%;\n    top: 102vh;\n    z-index: 10;\n    background: red;\n    height: 10px;\n`;\nexport class Navbar extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.listenToScroll = () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = winScroll / height;\n      this.setState({\n        theposition: scrolled\n      });\n\n      if (this.state.theposition > 0.1) {}\n    };\n\n    this.state = {\n      theposition: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.listenToScroll);\n  }\n\n  render() {\n    if (this.state.theposition > 0.4) return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      activeClass: \"top\",\n      to: \"top\",\n      spy: true,\n      smooth: true,\n      offset: 0,\n      duration: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 31\n      }\n    }, \"^ I\")), /*#__PURE__*/React.createElement(BottomShadow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    })));else {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n}\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/Gregory Blood/Code/portfolio/src/Components/Navbar.js"],"names":["React","useEffect","styled","Link","Item","div","BottomShadow","Navbar","Component","constructor","props","listenToScroll","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","setState","theposition","state","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AAGA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxB;AAoCA,MAAMC,YAAY,GAAEJ,MAAM,CAACG,GAAI;;;;;;;;CAA/B;AASA,OAAO,MAAME,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SAajBC,cAbiB,GAaA,MAAM;AACrB,YAAMC,SAAS,GACbC,QAAQ,CAACC,IAAT,CAAcC,SAAd,IAA2BF,QAAQ,CAACG,eAAT,CAAyBD,SADtD;AAGA,YAAME,MAAM,GACVJ,QAAQ,CAACG,eAAT,CAAyBE,YAAzB,GACAL,QAAQ,CAACG,eAAT,CAAyBG,YAF3B;AAIA,YAAMC,QAAQ,GAAGR,SAAS,GAAGK,MAA7B;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;;AAGA,UAAI,KAAKG,KAAL,CAAWD,WAAX,GAAyB,GAA7B,EAAkC,CAEjC;AACF,KA7BgB;;AAGf,SAAKC,KAAL,GAAa;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAb;AACD;;AACHE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKf,cAAvC;AACD;;AAEDgB,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKjB,cAA1C;AACD;;AAmBHkB,EAAAA,MAAM,GAAI;AACN,QAAI,KAAKN,KAAL,CAAWD,WAAX,GAAyB,GAA7B,EACA,oBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACQ,MAAA,WAAW,EAAC,KADpB;AAEQ,MAAA,EAAE,EAAC,KAFX;AAGQ,MAAA,GAAG,EAAE,IAHb;AAIQ,MAAA,MAAM,EAAE,IAJhB;AAKQ,MAAA,MAAM,EAAE,CALhB;AAMQ,MAAA,QAAQ,EAAE,GANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN,CAPR,eAQQ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CADJ,CADJ,CADA,KAgBK;AACD,0BACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKH;AACJ;;AAvDuC;AA0D5C,eAAef,MAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Link } from \"react-scroll\";\r\n\r\n\r\nconst Item = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    text-decoration: none;\r\n    display: block;\r\n    color: #00a3f5;\r\n    text-align: center;\r\n    font-size: 48px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    border-color: #00a3f5;\r\n    border-width: 4px;\r\n    height: 30px;\r\n    width: 30px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    line-height: 23%;\r\n    z-index: 10;\r\n    transition-duration: 0.4s;\r\n    -webkit-transition-duration: 0.4s;\r\n    @media(min-width: 769px) {\r\n        top: 15px;\r\n        right: 10px;\r\n        &:hover {\r\n            background-color: #00a3f5;\r\n            color: white;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    @media(max-width: 768px) {\r\n        bottom: 35px;\r\n        left: 7px;\r\n    }\r\n`;\r\nconst BottomShadow= styled.div`\r\n    position: fixed;\r\n    box-shadow: 0 -16px 16px 16px white;\r\n    width: 100%;\r\n    top: 102vh;\r\n    z-index: 10;\r\n    background: red;\r\n    height: 10px;\r\n`;\r\nexport class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { theposition: 0 };\r\n      }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.listenToScroll)\r\n      }\r\n      \r\n      componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.listenToScroll)\r\n      }\r\n      \r\n      listenToScroll = () => {\r\n        const winScroll =\r\n          document.body.scrollTop || document.documentElement.scrollTop\r\n      \r\n        const height =\r\n          document.documentElement.scrollHeight -\r\n          document.documentElement.clientHeight\r\n      \r\n        const scrolled = winScroll / height\r\n      \r\n        this.setState({\r\n          theposition: scrolled,\r\n        })\r\n        if (this.state.theposition > 0.1) {\r\n            \r\n        }\r\n      }\r\n    render () {\r\n        if (this.state.theposition > 0.4)\r\n        return (\r\n            <React.Fragment>\r\n                <Link\r\n                        activeClass=\"top\"\r\n                        to=\"top\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={0}\r\n                        duration={500}>\r\n                        <Item><div>^ I</div></Item>\r\n                        <BottomShadow/>\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n\r\n        else {\r\n            return (\r\n            <React.Fragment>\r\n\r\n            </React.Fragment>\r\n            )\r\n        }\r\n    }; \r\n}\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}